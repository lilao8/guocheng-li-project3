{"version":3,"sources":["firebase.js","Input.js","Stocks.js","Calculation.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Input","useState","symbol","setSymbol","price","setPrice","share","setShare","action","onSubmit","event","preventDefault","database","ref","push","set","htmlFor","type","id","value","placeholder","onChange","e","target","Stocks","props","stockList","map","stockObject","onClick","item","key","child","remove","Calculation","newList","setNewList","totalProfit","className","profitObject","num","profit","newArray","stockObj","promiseObj","axios","url","method","params","function","apikey","Promise","all","then","res","profitArray","forEach","obj","data","inputPrice","todayPrice","profitPerStock","Math","round","total","stock1","catch","error","alert","App","setStockList","useEffect","on","response","myData","val","stocks","stock","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32fb0802.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBzXA_ZA52-tPlNSVDCyNjau_-x7VUGU0Y\",\n  authDomain: \"project-3-bd1e5.firebaseapp.com\",\n  databaseURL: \"https://project-3-bd1e5-default-rtdb.firebaseio.com\",\n  projectId: \"project-3-bd1e5\",\n  storageBucket: \"project-3-bd1e5.appspot.com\",\n  messagingSenderId: \"846440590750\",\n  appId: \"1:846440590750:web:6a10be799f8065bfc6fa8f\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import { useState } from \"react\";\nimport firebase from \"./firebase\";\n\nconst Input = () => {\n//   const { stockList } = props;\n  const [symbol, setSymbol] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [share, setShare] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const dbRef = firebase.database().ref();\n    const newStock = dbRef.push();\n    newStock.set({\n      symbol,\n      price,\n      share,\n    });\n    setSymbol(\"\");\n    setPrice(\"\");\n    setShare(\"\");\n  };\n\n  return (\n    <form action=\"submit\" onSubmit={handleSubmit}>\n      <label htmlFor=\"stockInput\">\n        Please enter your stock symbol, price and share you bought.\n      </label>\n      <input\n        type=\"text\"\n        id=\"stockInput\"\n        value={symbol}\n        placeholder=\"Symbol\"\n        onChange={(e) => {\n          setSymbol(e.target.value);\n        }}\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Price\"\n        onChange={(e) => {\n          setPrice(e.target.value);\n        }}\n        value={price}\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Share\"\n        onChange={(e) => {\n          setShare(e.target.value);\n        }}\n        value={share}\n      />\n      <button>Add to the list</button>\n    </form>\n  );\n};\n\nexport default Input;\n","import firebase from \"firebase\";\n\nconst Stocks = (props) => {\n  const { stockList } = props;\n\n  const handleDelete = (item) => {\n    const dbRef = firebase.database().ref();\n    dbRef.child(item).remove();\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Symbol</th>\n          <th>Price</th>\n          <th>Share</th>\n          <th>+/-</th>\n        </tr>\n      </thead>\n      <tbody>\n        {stockList.map((stockObject) => {\n          return (\n            <tr key={stockObject.key}>\n              <td>{stockObject.symbol}</td>\n              <td>{stockObject.price}</td>\n              <td>{stockObject.share}</td>\n              <td>\n                <button\n                  onClick={() => {\n                    handleDelete(stockObject.key);\n                  }}\n                >\n                  -\n                </button>\n\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Stocks;\n","import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Calculation = (props) => {\n  const { stockList } = props;\n  const [newList, setNewList] = useState([]);\n  let totalProfit = 0;\n\n  const handleCalculate = (e) => {\n    e.preventDefault();\n    const newArray = [];\n    const key = \"JCWSLD5KCL4HGL0Q\";\n\n    stockList.map((stockObj) => {\n      const promiseObj = axios({\n        url: \"https://www.alphavantage.co/query\",\n        method: \"GET\",\n        params: {\n          function: \"TIME_SERIES_DAILY\",\n          symbol: stockObj.symbol,\n          apikey: key,\n        },\n      });\n      newArray.push(promiseObj);\n      return newArray;\n    });\n    Promise.all(newArray)\n      .then((res) => {\n        const profitArray = [];\n        res.forEach((obj) => {\n          stockList.forEach((stockObj) => {\n            if (stockObj.symbol === obj.data[\"Meta Data\"][\"2. Symbol\"]) {\n              const inputPrice = stockObj.price;\n              const todayPrice =\n                obj.data[\"Time Series (Daily)\"][\"2021-07-23\"][\"4. close\"];\n              const profitPerStock =\n                (Math.round(todayPrice - inputPrice) * stockObj.share * 100) /\n                100;\n              totalProfit += profitPerStock;\n              const profit = { profit: profitPerStock, total: totalProfit };\n              const stock1 = { ...stockObj, ...profit };\n              profitArray.push(stock1);\n            }\n          });\n        });\n        setNewList(profitArray);\n      })\n      .catch((error) => {\n        alert(\"Please enter correct information or wait for another minute.\");\n      });\n  };\n  const positiveValue = (num) =>\n    num > 0 ? \"isPositive\" : num < 0 ? \"isNegative\" : \"\";\n\n  return (\n    <>\n      <table className=\"calculation\">\n        <thead>\n          <tr>\n            <th>Profit</th>\n          </tr>\n        </thead>\n        <tbody>\n            {newList.map((profitObject) => {\n              return (\n                <tr key={profitObject.key}>\n                  <td\n                    className={positiveValue(profitObject.profit)}\n                  >\n                    ${profitObject.profit} USD\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n      <button className=\"submit\" onClick={handleCalculate}>\n        Calculate\n      </button>\n    </>\n  );\n};\n\nexport default Calculation;\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport firebase from \"./firebase\";\nimport Input from \"./Input\";\nimport Stocks from \"./Stocks\";\nimport Calculation from \"./Calculation\";\n\nfunction App() {\n  const [stockList, setStockList] = useState([]);\n\n  useEffect(() => {\n    const dbRef = firebase.database().ref();\n    dbRef.on(\"value\", (response) => {\n      const myData = response.val();\n      const newArray = [];\n      for (const stocks in myData) {\n        const stock = {\n          key: stocks,\n          symbol: myData[stocks].symbol,\n          price: myData[stocks].price,\n          share: myData[stocks].share,\n        };\n        newArray.push(stock);\n      }\n      setStockList(newArray);\n    });\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Stock Watchlist📈📈📈</h1>\n        <Input stockList={stockList} />\n        <p>Example: TSLA; 450; 10</p>\n        <h2>Rule 1: No more than 5 stocks each time.</h2>\n        <h2>Rule 2: Do not try more than 5 times per minute.</h2>\n        <p className=\"hide\">Data from 2021-07-23</p>\n      </header>\n\n      <main>\n        <div className=\"tables wrapper\">\n          <Stocks stockList={stockList} />\n          <Calculation stockList={stockList} />\n        </div>\n      </main>\n\n      <footer>\n        Created at\n        <span>\n          <a href=\"https://junocollege.com/\"> Juno College</a>\n        </span>\n        , powered by <a href=\"https://www.alphavantage.co/\">alphavantage</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}